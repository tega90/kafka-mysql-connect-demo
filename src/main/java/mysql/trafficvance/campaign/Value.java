/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package mysql.trafficvance.campaign;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Value extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9174207923856337998L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Value\",\"namespace\":\"mysql.trafficvance.campaign\",\"fields\":[{\"name\":\"campaign_id\",\"type\":\"long\"},{\"name\":\"advertiser_id\",\"type\":\"long\"},{\"name\":\"campaign_status\",\"type\":\"string\"}],\"connect.name\":\"mysql.trafficvance.campaign.Value\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Value> ENCODER =
      new BinaryMessageEncoder<Value>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Value> DECODER =
      new BinaryMessageDecoder<Value>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Value> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Value> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Value>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Value to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Value from a ByteBuffer. */
  public static Value fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long campaign_id;
  @Deprecated public long advertiser_id;
  @Deprecated public java.lang.CharSequence campaign_status;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Value() {}

  /**
   * All-args constructor.
   * @param campaign_id The new value for campaign_id
   * @param advertiser_id The new value for advertiser_id
   * @param campaign_status The new value for campaign_status
   */
  public Value(java.lang.Long campaign_id, java.lang.Long advertiser_id, java.lang.CharSequence campaign_status) {
    this.campaign_id = campaign_id;
    this.advertiser_id = advertiser_id;
    this.campaign_status = campaign_status;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return campaign_id;
    case 1: return advertiser_id;
    case 2: return campaign_status;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: campaign_id = (java.lang.Long)value$; break;
    case 1: advertiser_id = (java.lang.Long)value$; break;
    case 2: campaign_status = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'campaign_id' field.
   * @return The value of the 'campaign_id' field.
   */
  public java.lang.Long getCampaignId() {
    return campaign_id;
  }

  /**
   * Sets the value of the 'campaign_id' field.
   * @param value the value to set.
   */
  public void setCampaignId(java.lang.Long value) {
    this.campaign_id = value;
  }

  /**
   * Gets the value of the 'advertiser_id' field.
   * @return The value of the 'advertiser_id' field.
   */
  public java.lang.Long getAdvertiserId() {
    return advertiser_id;
  }

  /**
   * Sets the value of the 'advertiser_id' field.
   * @param value the value to set.
   */
  public void setAdvertiserId(java.lang.Long value) {
    this.advertiser_id = value;
  }

  /**
   * Gets the value of the 'campaign_status' field.
   * @return The value of the 'campaign_status' field.
   */
  public java.lang.CharSequence getCampaignStatus() {
    return campaign_status;
  }

  /**
   * Sets the value of the 'campaign_status' field.
   * @param value the value to set.
   */
  public void setCampaignStatus(java.lang.CharSequence value) {
    this.campaign_status = value;
  }

  /**
   * Creates a new Value RecordBuilder.
   * @return A new Value RecordBuilder
   */
  public static mysql.trafficvance.campaign.Value.Builder newBuilder() {
    return new mysql.trafficvance.campaign.Value.Builder();
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Value RecordBuilder
   */
  public static mysql.trafficvance.campaign.Value.Builder newBuilder(mysql.trafficvance.campaign.Value.Builder other) {
    return new mysql.trafficvance.campaign.Value.Builder(other);
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Value instance.
   * @param other The existing instance to copy.
   * @return A new Value RecordBuilder
   */
  public static mysql.trafficvance.campaign.Value.Builder newBuilder(mysql.trafficvance.campaign.Value other) {
    return new mysql.trafficvance.campaign.Value.Builder(other);
  }

  /**
   * RecordBuilder for Value instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Value>
    implements org.apache.avro.data.RecordBuilder<Value> {

    private long campaign_id;
    private long advertiser_id;
    private java.lang.CharSequence campaign_status;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(mysql.trafficvance.campaign.Value.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.campaign_id)) {
        this.campaign_id = data().deepCopy(fields()[0].schema(), other.campaign_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.advertiser_id)) {
        this.advertiser_id = data().deepCopy(fields()[1].schema(), other.advertiser_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.campaign_status)) {
        this.campaign_status = data().deepCopy(fields()[2].schema(), other.campaign_status);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Value instance
     * @param other The existing instance to copy.
     */
    private Builder(mysql.trafficvance.campaign.Value other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.campaign_id)) {
        this.campaign_id = data().deepCopy(fields()[0].schema(), other.campaign_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.advertiser_id)) {
        this.advertiser_id = data().deepCopy(fields()[1].schema(), other.advertiser_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.campaign_status)) {
        this.campaign_status = data().deepCopy(fields()[2].schema(), other.campaign_status);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'campaign_id' field.
      * @return The value.
      */
    public java.lang.Long getCampaignId() {
      return campaign_id;
    }

    /**
      * Sets the value of the 'campaign_id' field.
      * @param value The value of 'campaign_id'.
      * @return This builder.
      */
    public mysql.trafficvance.campaign.Value.Builder setCampaignId(long value) {
      validate(fields()[0], value);
      this.campaign_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'campaign_id' field has been set.
      * @return True if the 'campaign_id' field has been set, false otherwise.
      */
    public boolean hasCampaignId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'campaign_id' field.
      * @return This builder.
      */
    public mysql.trafficvance.campaign.Value.Builder clearCampaignId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'advertiser_id' field.
      * @return The value.
      */
    public java.lang.Long getAdvertiserId() {
      return advertiser_id;
    }

    /**
      * Sets the value of the 'advertiser_id' field.
      * @param value The value of 'advertiser_id'.
      * @return This builder.
      */
    public mysql.trafficvance.campaign.Value.Builder setAdvertiserId(long value) {
      validate(fields()[1], value);
      this.advertiser_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'advertiser_id' field has been set.
      * @return True if the 'advertiser_id' field has been set, false otherwise.
      */
    public boolean hasAdvertiserId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'advertiser_id' field.
      * @return This builder.
      */
    public mysql.trafficvance.campaign.Value.Builder clearAdvertiserId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'campaign_status' field.
      * @return The value.
      */
    public java.lang.CharSequence getCampaignStatus() {
      return campaign_status;
    }

    /**
      * Sets the value of the 'campaign_status' field.
      * @param value The value of 'campaign_status'.
      * @return This builder.
      */
    public mysql.trafficvance.campaign.Value.Builder setCampaignStatus(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.campaign_status = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'campaign_status' field has been set.
      * @return True if the 'campaign_status' field has been set, false otherwise.
      */
    public boolean hasCampaignStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'campaign_status' field.
      * @return This builder.
      */
    public mysql.trafficvance.campaign.Value.Builder clearCampaignStatus() {
      campaign_status = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Value build() {
      try {
        Value record = new Value();
        record.campaign_id = fieldSetFlags()[0] ? this.campaign_id : (java.lang.Long) defaultValue(fields()[0]);
        record.advertiser_id = fieldSetFlags()[1] ? this.advertiser_id : (java.lang.Long) defaultValue(fields()[1]);
        record.campaign_status = fieldSetFlags()[2] ? this.campaign_status : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Value>
    WRITER$ = (org.apache.avro.io.DatumWriter<Value>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Value>
    READER$ = (org.apache.avro.io.DatumReader<Value>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
